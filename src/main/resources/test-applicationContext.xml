<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">
    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost/testdb"/>
        <property name="username" value="root"/>
        <property name="password" value="pcs8437!"/>
    </bean>

    <bean id="userDao" class="org.practice.user.dao.basicdao.UserDaoJdbc">
        <property name="dataSource" ref="dataSource"/>
        <property name="sqlService" ref="sqlService"/>
    </bean>

<!--    <bean id="sqlService" class="org.practice.user.sqlservice.BaseSqlService">-->
<!--        <property name="sqlReader" ref="sqlReader"/>-->
<!--        <property name="sqlRegistry" ref="sqlRegistry"/>-->
<!--    </bean>-->

    <bean id="sqlService" class="org.practice.user.sqlservice.OxmSqlService" >
        <property name="unmarshaller" ref="unmarshaller"/>
        <property name="sqlRegistry" ref="sqlRegistry"/>
    </bean>

    <bean id="sqlReader" class="org.practice.user.sqlservice.reader.JaxbXmlSqlReader">
        <property name="sqlmapFile" value="sqlmap.xml"/>
    </bean>

    <bean id="sqlRegistry" class="org.practice.user.sqlservice.registry.EmbeddedDbSqlRegistry">
        <property name="dataSource" ref="embeddedDatabase"/>
    </bean>

    <bean id="unmarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="contextPath" value="org.practice.user.sqlservice.jaxb"/>
    </bean>

    <jdbc:embedded-database id="embeddedDatabase" type="HSQL">
        <jdbc:script location="classpath:schema.sql"/>
    </jdbc:embedded-database>

<!--    <bean id="sqlService" class="org.practice.user.sqlservice.SimpleSqlService">-->
<!--        <property name="sqlMap">-->
<!--            <map>-->
<!--                <entry key="userAdd" value="insert into users(id, name, password, email, level, login, recommend)-->
<!--            values(?, ?, ?, ?, ?, ?, ?)"/>-->
<!--                <entry key="userGet" value="select * from users where id = ?"/>-->
<!--                <entry key="userGetAll" value="select * from users order by id"/>-->
<!--                <entry key="userDeleteAll" value="delete from users" />-->
<!--                <entry key="userGetCount" value="select count(*) from users"/>-->
<!--                <entry key="userUpdate" value="update users set name = ?, password = ?, level = ?, login = ?,-->
<!--                    recommend = ? where id = ?"/>-->
<!--            </map>-->
<!--        </property>-->
<!--    </bean>-->

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="mailSender" class="org.practice.user.service.DummyMailSender"/>

    <bean id="userService" class="org.practice.user.service.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
        <property name="mailSender" ref="mailSender"/>
    </bean>

    <bean id="testUserService" class="org.practice.user.service.UserServiceTest$TestUserServiceImpl"
          parent="userService"/>

<!--    <bean id="transactionAdvice" class="org.practice.user.service.TransactionAdvice">-->
<!--        <property name="transactionManager" ref="transactionManager"/>-->
<!--    </bean>-->

<!--    <tx:advice id="transactionAdvice"> &lt;!&ndash; TransactionInterceptor &ndash;&gt;-->
<!--        <tx:attributes>-->
<!--            <tx:method name="get*" read-only="true"/>-->
<!--            <tx:method name="*"/>-->
<!--        </tx:attributes>-->
<!--    </tx:advice>-->

    <!--    <aop:config> &lt;!&ndash; DefaultAdvisorAutoProxyCreator &ndash;&gt;-->
<!--        <aop:pointcut id="transactionPointcut" expression="execution(* *..*ServiceImpl.upgrade*(..))"/> &lt;!&ndash; AspectJExpressionPointcut &ndash;&gt;-->
<!--        <aop:advisor advice-ref="transactionAdvice" pointcut-ref="transactionPointcut"/> &lt;!&ndash; DefaultPointcutAdvisor &ndash;&gt;-->
<!--    </aop:config>-->

<!--    <aop:config>-->
<!--        <aop:advisor advice-ref="transactionAdvice" pointcut="bean(*Service)"/>-->
<!--    </aop:config>-->
    <tx:annotation-driven/>
</beans>